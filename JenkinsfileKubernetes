node{
    stage('SCM Checkout') {
        git branch: 'main', credentialsId: 'GIT_CREDENTIALS', url: 'https://github.com/arysthinahnarindraniaina/jenkins-pipeline-kubernetes.git'
    }
    
    stage('Maven Clean Package') {
      def mavenHome =  tool name: "Maven", type: "maven"
      def mavenCMD = "${mavenHome}/bin/mvn"
      sh "${mavenCMD} clean package"
    }
    
    stage('Build Docker Image'){        
        sh "docker build -t ameintu/jenkins-docker-k8s-project:${env.BUILD_ID} ."
    }
    
   stage('Push Docker Image') {
    steps {
        withDockerRegistry([credentialsId: 'DOCKER_HUB_CREDENTIALS', url: 'https://registry-1.docker.io']) {
            sh "echo ${DOCKER_HUB_CREDENTIALS} | docker login --username ameintu --password-stdin"
            sh "docker push ameintu/jenkins-docker-k8s-project:${env.BUILD_ID}"
        }
    }
}
    
    stage("Deploy Application in K8S Cluster"){
        kubernetesDeploy(
         configs: 'springBootMongo.yml', 
         kubeconfigId: 'KUBERNATES_CLUSTER_CONFIG',
         enableConfigSubstitution: true
        )
    }
    
     /**
     stage("Deploy To Kuberates Cluster"){
     	sh "sed -i 's/tagversion/${env.BUILD_ID}/g' springBootMongo.yml"
        sh 'kubectl apply -f springBootMongo.yml'
     } **/
	
}
